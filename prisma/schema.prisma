// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String     @unique
  user          String?
  image         String?
  password      String?
  emailVerified DateTime?
  created_at    DateTime?  @default(now())
  updated_at    DateTime?  @updatedAt
  accounts      Account[]
  events        Event[]
  favorites     Favorite[]
  bookmarks     Bookmark[]
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String  @unique
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum EventCategory {
  CONFERENCE
  WORKSHOP
  SEMINAR
  NETWORKING
  SOCIAL
  TECH
  BUSINESS
  ARTS
  SPORTS
  EDUCATION
  ENTERTAINMENT
  COMMUNITY
  OTHER
}

model Event {
  id          String        @id @default(cuid())
  title       String
  description String
  date        DateTime
  banner      String
  address     String
  category    EventCategory @default(OTHER)
  user_id     String
  created_at  DateTime      @default(now())
  updated_at  DateTime      @updatedAt
  user        User          @relation(fields: [user_id], references: [id])
  favorites   Favorite[]
  bookmarks   Bookmark[]
}

model Favorite {
  id         String   @id @default(cuid())
  user_id    String
  event_id   String
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  event      Event    @relation(fields: [event_id], references: [id], onDelete: Cascade)

  @@unique([user_id, event_id])
}

model Bookmark {
  id         String   @id @default(cuid())
  user_id    String
  event_id   String
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  event      Event    @relation(fields: [event_id], references: [id], onDelete: Cascade)

  @@unique([user_id, event_id])
}
